program -> PROGRAM identifier SEMICOLON body DOT
body -> var_declaration_part function_declaration_list block

var_declaration_part -> VAR var_declaration_list SEMICOLON | 
var_declaration_list -> var_declaration | var_declaration SEMICOLON var_declaration_list
var_declaration -> identifier_list COLON type   
identifier_list -> identifier | identifier COMMA identifier_list

function_declaration_list -> function_declaration function_declaration_list |
function_declaration -> function_heading SEMICOLON block SEMICOLON
function_heading -> FUNCTION identifier parameter_list COLON simple_type
parameter_list -> LPAREN parameter_part RPAREN |
parameter_part -> parameter | parameter SEMICOLON parameter_part
parameter -> identifier_list COLON simple_type

block -> BEGIN statement_list END
function_call ->  identifier LPAREN expression_list RPAREN
qualified_name -> variable_identifier | variable_identifier LBRACKET expression_list RBRACKET

statement_list -> statement SEMICOLON statement_list | statement |
statement -> if_statement
        | for_statement
        | while_statement
        | assignment_statement
        | block
        | function_call
        | READ LPAREN identifier_list RPAREN
        | WRITE LPAREN expression_list RPAREN
        | BREAK
        | CONTINUE

if_statement -> IF expression THEN statement else_part
else_part -> ELSE statement |

while_statement -> WHILE expression DO statement

for_statement -> FOR assignment_statement direction expression DO statement
direction -> TO | DOWNTO

assignment_statement -> qualified_name COLON= expression

expression -> app_term | app_term cmp_op app_term
expression_list -> expression | expression COMMA expression_list

app_term -> opt_sign mul_term| opt_sign mul_term app_op mul_term
opt_sign -> sign | 
app_op -> sign | or

mul_term-> factor | factor mul_op term

factor -> unsigned_number 
	| qualified_name
	| function_call
	| LPAREN expression RPAREN
	| NOT factor
	
type -> simple_type | array_type
simple_type -> integer
array_type -> ARRAY LBRACKET range_list RBRACKET OF simple_type
range_list -> range | range COMMA range_list
range -> unsigned_number .. unsigned_number

SEMICOLON -> ;
COMMA -> ,
DOT -> .
COLON -> :
COLON= -> :=
LPAREN -> (
RPAREN -> )
LBRACKET -> [
RBRACKET -> ]
sign -> + | -
cmp_op ->  >= | <= | = | <> | > | <
mul_op -> * | / | DIV | MOD | AND
identifier -> [a-zA-Z][a-zA-Z0-9]*
unsigned_number -> [0-9]+